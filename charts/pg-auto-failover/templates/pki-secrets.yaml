{{- if and .Values.tls.generate (or .Release.IsInstall .Values.tls.forceGenerate) }}
{{- $ca := genCA "postgresql-ca" 3650 }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgresql-auto-failover.fullname" . }}-tls-ca
  labels:
    {{- include "postgresql-auto-failover.labels" . | nindent 4 }}
  annotations:
{{- if .Values.tls.forceGenerate }}
    helm.sh/hook: pre-upgrade
{{- else if .Values.tls.generate }}
    helm.sh/hook: pre-install
{{- end }}  
type: Opaque
data:
  ca.crt: {{ $ca.Cert | b64enc }}
---
{{- $monitorService := printf "%s-headless" (include "postgresql-auto-failover.monitor.fullname" .) }}
{{- $monitorServiceFqdn := printf "%s.%s.svc.cluster.local" $monitorService .Release.Namespace}}
{{- $wildcardMonitorServiceFqdn := printf "*.%s" $monitorServiceFqdn}}
{{- $cert := genSignedCert $monitorServiceFqdn nil ( list $monitorService $wildcardMonitorServiceFqdn $monitorServiceFqdn ) 3650 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgresql-auto-failover.monitor.fullname" . }}-tls
  labels:
    {{- include "postgresql-auto-failover.monitor.labels" . | nindent 4 }}
  annotations:
{{- if .Values.tls.forceGenerate }}
    helm.sh/hook: pre-upgrade
{{- else if .Values.tls.generate }}
    helm.sh/hook: pre-install
{{- end }}  
type: kubernetes.io/tls
data:
  ca.crt: {{ $ca.Cert | b64enc }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
---
{{- $nodeService := printf "%s-headless" (include "postgresql-auto-failover.node.fullname" .) }}
{{- $nodeServiceFqdn := printf "%s.%s.svc.cluster.local" $nodeService .Release.Namespace}}
{{- $wildcardNodeServiceFqdn := printf "*.%s" $nodeServiceFqdn}}
{{- $cert := genSignedCert $nodeServiceFqdn nil ( list $nodeService $wildcardNodeServiceFqdn $nodeServiceFqdn ) 3650 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "postgresql-auto-failover.node.fullname" . }}-tls
  labels:
    {{- include "postgresql-auto-failover.node.labels" . | nindent 4 }}
  annotations:
{{- if .Values.tls.forceGenerate }}
    helm.sh/hook: pre-upgrade
{{- else if .Values.tls.generate }}
    helm.sh/hook: pre-install
{{- end }}  
type: kubernetes.io/tls
data:
  ca.crt: {{ $ca.Cert | b64enc }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}

{{- end }} # Global if